namespace Meepl.Util;

/// <summary>
/// This will contain the updated SQL schema for all of Meepl
/// </summary>
public class SQLCommands
{
    //Globally needed by all
    public static readonly string CREATE_TABLEBOUND_PROFILE_TABLE = "CREATE TABLE IF NOT EXISTS TABLEBOUND_PROFILE(TABLEBOUND_ID BIGINT PRIMARY KEY, USERNAME VARCHAR(16), BIO VARCHAR(200), ACTION VARCHAR(32), ICONCDNLINK VARCHAR(128), STATUS SMALLINT);";

    //From this point down the tables are split by service, the only exception being Meepl Statistics which has some of
    //its own tables and calls upon ALL of the other tables in the database
    
    #region Meepl Identity
    //Platform Profiles
    public static readonly string CREATE_PLATFORM_PROFILE_TABLE_META = "CREATE TABLE IF NOT EXISTS META_PROFILE(TABLEBOUND_ID BIGINT, META_ID BIGINT, GAME_ID INT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE (TABLEBOUND_ID));";
    public static readonly string CREATE_PLATFORM_PROFILE_TABLE_STEAM = "CREATE TABLE IF NOT EXISTS STEAM_PROFILE(TABLEBOUND_ID BIGINT, STEAM_ID BIGINT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE (TABLEBOUND_ID));";
    public static readonly string CREATE_PLATFORM_PROFILE_TABLE_APPLE = "CREATE TABLE IF NOT EXISTS APPLE_PROFILE(TABLEBOUND_ID BIGINT, APPLE_ID BIGINT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE (TABLEBOUND_ID));";
    public static readonly string CREATE_PLATFORM_PROFILE_TABLE_DISCORD = "CREATE TABLE IF NOT EXISTS DISCORD_PROFILE(TABLEBOUND_ID BIGINT, DISCORD_ID BIGINT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE (TABLEBOUND_ID));";
    public static readonly string CREATE_PLATFORM_PROFILE_TABLE_EPIC = "CREATE TABLE IF NOT EXISTS EPIC_PROFILE(TABLEBOUND_ID BIGINT, EPIC_ID BIGINT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE (TABLEBOUND_ID));";
    
    //Physical security keys
    public static readonly string CREATE_PLATFORM_PROFILE_TABLE_PASSKEY = "CREATE TABLE IF NOT EXISTS PASSKEYS (CRED_ID BYTEA, CRED_PUBLIC_KEY BYTEA, TABLEBOUNDID BIGINT, SIGN_IN_COUNTER INT, CREATED_AT TIMESTAMP, UPDATED_AT TIMESTAMP, LAST_USED TIMESTAMP, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUNDID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    
    //Username Blacklist
    public static readonly string CREATE_USERNAME_BLACKLIST_TABLE = "CREATE TABLE IF NOT EXISTS BLACKLISTED_USERNAMES(USERNAME VARCHAR(16));";

    #endregion

    #region Meepl Social

    public static readonly string CREATE_USERNAME_FORCE_CHANGE_TABLE = "CREATE TABLE IF NOT EXISTS USERNAME_FORCE_CHANGE (TABLEBOUND_ID BIGINT PRIMARY KEY, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE (TABLEBOUND_ID));";
    
    public static readonly string CREATE_FRIEND_LIST_TABLE = "CREATE TABLE IF NOT EXISTS FRIENDS (TABLEBOUND_ID BIGINT, FRIEND_BLOB BYTEA, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    public static readonly string CREATE_BLOCKED_LIST_TABLE = "CREATE TABLE IF NOT EXISTS BLOCKED (TABLEBOUND_ID BIGINT, BLOCKED_BLOB BYTEA, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    public static readonly string CREATE_EXPERIENCE_TABLE = "CREATE TABLE IF NOT EXISTS EXPERIENCES (EXPERIENCE_IDENTIFIER INT PRIMARY KEY, EXPERIENCE_BLOB BYTEA, BLOBHASH VARCHAR(128));";
    public static readonly string CREATE_FRIEND_REQUESTS_TABLE = "CREATE TABLE IF NOT EXISTS FRIEND_REQUESTS (ISSUER BIGINT, RECIPIENT BIGINT, MSG VARCHAR(128), CONSTRAINT FK_ISSUER FOREIGN KEY (ISSUER) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID), CONSTRAINT FK_RECIPIENT FOREIGN KEY (RECIPIENT) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    public static readonly string CREATE_EVENTS_TABLE = "CREATE TABLE IF NOT EXISTS EVENTS (EVENT_ID BIGINT, EVENT_BLOB BYTEA, BLOBHASH VARCHAR(128));";
    public static readonly string CREATE_BADGES_TABLE = "CREATE TABLE IF NOT EXISTS BADGES (BADGE_ID BIGINT, BADGE_BLOB BYTEA, BLOBHASH VARCHAR(128));";

    //Profile Extensions
    public static readonly string CREATE_PROFILE_BADGES_TABLE = "CREATE TABLE IF NOT EXISTS PROFILE_BADGES (TABLEBOUND_ID BIGINT UNIQUE PRIMARY KEY, BADGE_CONTAINER_BLOB BYTEA, BLOBHASH VARCHAR(128), CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    public static readonly string CREATE_PROFILE_EVENTS_TABLE = "CREATE TABLE IF NOT EXISTS PROFILE_EVENTS (TABLEBOUND_ID BIGINT UNIQUE PRIMARY KEY, EVENT_CONTAINER_BLOB BYTEA, BLOBHASH VARCHAR(128), CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    
    #endregion

    #region Meepl Organization

    public static readonly string CREATE_CLANS_TABLE = "CREATE TABLE IF NOT EXISTS CLANS (CLAIN_ID BIGINT, CLAN_BLOB BYTEA, BLOBHASH VARCHAR(128));";
    public static readonly string CREATE_CLUBS_TABLE = "CREATE TABLE IF NOT EXISTS CLUBS (CLUB_ID BIGINT, CLUB_BLOB BYTEA, BLOBHASH VARCHAR(128));";

    //Profile Extensions
    public static readonly string CREATE_PROFILE_MEMBERSHIPS = "CREATE TABLE IF NOT EXISTS PROFILE_MEMBERSHIPS (TABLEBOUND_ID BIGINT, CLAN_CONTAINER_BLOB BYTEA, CLUB_CONTAINER_BLOB BYTEA, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    #endregion

    #region Meepl Quests



    #endregion

    #region Meepl Clubhouse



    #endregion

    #region Meepl Statistics

    public static readonly string CREATE_SESSIONS_TABLE = "CREATE TABLE IF NOT EXISTS SESSIONS (TABLEBOUND_ID BIGINT, IP VARCHAR(128), LOGIN TIMESTAMPTZ, LOGOUT TIMESTAMPTZ, DEVICE VARCHAR(128), EXPERIENCE_IDENTIFIER INT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID), CONSTRAINT FK_EXPERIENCE_ID FOREIGN KEY (EXPERIENCE_IDENTIFIER) REFERENCES EXPERIENCES(EXPERIENCE_IDENTIFIER));";

    #endregion

    #region Meepl Universe

    public static readonly string CREATE_PROFILE_UNIVERSE_ITEMS_TABLE = "CREATE TABLE IF NOT EXISTS PROFILE_UNIVERSE_ITEMS (TABLEBOUND_ID BIGINT, TITLE BIGINT, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";
    
    //All tables below this point in this region refer to the Meepl Universe DB which is NOT Meepl Prod
    public static readonly string CREATE_UNIVERSE_TABLE_TITLES = "CREATE TABLE IF NOT EXISTS UNIVERSE_TITLES (TABLEBOUND_ID BIGINT, TITLE_BLOB BYTEA, BLOBHASH VARCHAR(128));";
 
    #endregion

    #region Meepl Message

    public static readonly string CREATE_PROFILE_PUBLIC_KEY = "CREATE TABLE IF NOT EXISTS PROFILE_PUBLIC_KEY(TABLEBOUND_ID BIGINT, PUBLIC_KEY BYTEA, CONSTRAINT FK_TID FOREIGN KEY (TABLEBOUND_ID) REFERENCES TABLEBOUND_PROFILE(TABLEBOUND_ID));";

    #endregion
}